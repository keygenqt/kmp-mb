version: "3"
name: kmp-mb

services:
  db:
    container_name: kmp-mb-database
    platform: linux/x86_64
    build:
      context: .
      dockerfile: db/Dockerfile
    restart: always
    tty: true
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./db/my.cnf:/etc/mysql/my.cnf
    networks:
      - internal

  phpmyadmin:
    container_name: kmp-mb-phpmyadmin
    depends_on:
      db:
        condition: service_started
    image: phpmyadmin
    restart: always
    tty: true
    ports:
      - ${PORT_MY_ADMIN}:80
    environment:
      PMA_HOST: db
      UPLOAD_LIMIT: 25M
    volumes:
      # Phpmyadmin configuration files
      - ./configurations/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php
      - ./configurations/phpmyadmin/config.secret.inc.php:/etc/phpmyadmin/config.secret.inc.php
    networks:
      - internal

  gradle:
    container_name: kmp-mb-kotlin-build
    restart: no
    tty: true
    build:
      context: .
      dockerfile: gradle/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        cd /var/www/src/shared
        gradle shared:serverLib
        gradle shared:reactLib

        cd /var/www/src/server
        gradle buildFatJar
    working_dir: /var/www/src
    volumes:
      - ../apps:/var/www/src
      # Server configuration files
      - ./configurations/server/application.conf:/var/www/src/server/src/main/resources/application.conf

  node1:
    container_name: kmp-mb-build-admin-panel
    restart: no
    build:
      context: .
      dockerfile: node/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        cd /var/www/src/admin-panel
        npm install
        npm run build
    working_dir: /var/www/src
    volumes:
      - ../apps:/var/www/src
        # React configuration files
      - ./configurations/admin-panel/AppConf.js:/var/www/src/admin-panel/src/conf/AppConf.js

  node2:
    container_name: kmp-mb-build-website
    restart: no
    build:
      context: .
      dockerfile: node/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        cd /var/www/src/website
        npm install
        npm run build
    working_dir: /var/www/src
    volumes:
      - ../apps:/var/www/src
        # React configuration files
      - ./configurations/website/AppConf.js:/var/www/src/website/src/conf/AppConf.js

  java:
    container_name: kmp-mb-server-run
    depends_on:
      gradle:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: java/Dockerfile
    restart: always
    tty: true
    command: "java -jar build/libs/mb-server.jar"
    ports:
      - ${PORT_API}:3002
    working_dir: /var/www/src
    volumes:
      - ../apps/server/:/var/www/src
      # Mount uploads folder
      - ../uploads:/var/www/src/uploads
    networks:
      - internal

  nginx:
    container_name: kmp-mb-nginx
    depends_on:
      java:
        condition: service_started
      node1:
        condition: service_completed_successfully
      node2:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: always
    tty: true
    ports:
      - ${PORT_WEBSITE}:3000
      - ${PORT_ADMIN_PANEL}:3001
    volumes:
      - ../:/var/www/src
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  kmp-mb-database:
